name: CI/CD Pipeline

on:
  - push
  - pull_request

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 15432:5432
        options: >-
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.8
          - 3.9
          # YAML, yay https://github.com/actions/runner/issues/1989
          - '3.10'
          - 3.11

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install PDM
        run: python -m pip install pdm

      - name: Install dependencies
        run: pdm install

      - name: Run tests
        run: pdm run make test

      - name: Run linter
        run: pdm run make lint

      - name: Run mypy
        run: pdm run make mypy

  build:
    name: Build package
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3

      - name: Install PDM
        run: python -m pip install pdm

      - name: Install dependencies
        run: pdm install

      - name: Build only
        run: pdm build

      # make it available for the next step
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist

  pypi-publish:
    name: Upload release to PyPI
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: build
    # environment:
    #   name: pypi
    #   url: https://pypi.org/p/postgres-tq
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
    # retrieve the artifact created at previous step
    - uses: actions/download-artifact@v3
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        package-dir: artifact/


